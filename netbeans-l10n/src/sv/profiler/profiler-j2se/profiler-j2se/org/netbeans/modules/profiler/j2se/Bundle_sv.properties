# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

OpenIDE-Module-Display-Category=Profiling
OpenIDE-Module-Name=Java Profiler (Java SE Projects Support)
OpenIDE-Module-Long-Description=Add-on for NetBeans Profiler providing support for profiling J2SE projects.

J2SEProjectTypeProfiler_ModifyBuildScriptCaption=Enable Profiling of {0}
J2SEProjectTypeProfiler_ModifyBuildScriptMsg=<html><b>Profiler is not integrated with project {0}.<br>Click OK to perform the integration.</b><br><br>As part of the integration, the project build script will be modified.<br>The original file will be backed up as {1}.<br><br>Note: You can undo the profiler integration at any time by invoking<br>Profile | Advanced Commands | Unintegrate Profiler from the main menu.</html>
J2SEProjectTypeProfiler_RegenerateBuildScriptMsg=The {0} build script has been modified.\nIt needs to be regenerated to proceed with profiling.\n\nDo you want to continue?
J2SEProjectTypeProfiler_CannotFindBuildScriptMsg=Cannot find the project {0} file.
J2SEProjectTypeProfiler_CannotBackupBuildScriptMsg=The project build script cannot be backed up. Do you still want to continue?
J2SEProjectTypeProfiler_ModifyBuildScriptManuallyMsg=The project {0} file cannot be automatically modified for profiling. You need to manually insert the following import clause in it\:\n{1}\nPlease perform this change and start profiling again.
J2SEProjectTypeProfiler_ProjectCategory=Project
J2SEProjectTypeProfiler_ListenersCategory=AWT & Swing Listeners
J2SEProjectTypeProfiler_PaintersCategory=AWT & Swing Painters
J2SEProjectTypeProfiler_IoCategory=Java IO
J2SEProjectTypeProfiler_FilesCategory=Filer
J2SEProjectTypeProfiler_SocketsCategory=Sockets

JavaApplicationIntegrationProvider_Title=Java Application
# HTML-formatted
JavaApplicationIntegrationProvider_ManualRemoteStep3Message=Run the application using {0}. When starting the application, provide the extra startup option to the <code>java</code> command\:<br><code>{1}</code><br>The {2}.
# HTML-formatted
JavaApplicationIntegrationProvider_ManualRemoteStep4Message=The JVM will start, but will not proceed with application execution until you connect the profiler.
# HTML-formatted
JavaApplicationIntegrationProvider_ManualRemoteHintMessage=You can use <code>{0}</code> command instead of <code>java</code> command to run your application in profiling mode. Check the script for any additional modifications according to your system configuration.
# HTML-formatted
JavaApplicationIntegrationProvider_ManualDirectStep1Message=Run the application using {0}. When starting the application, provide the extra startup option to the <code>java</code> command\:<br><code>{1}</code>
# HTML-formatted
JavaApplicationIntegrationProvider_ManualDirectStep2Message=The JVM will start, but will not proceed with application execution until you connect the profiler.
# HTML-formatted
JavaApplicationIntegrationProvider_DynamicWarningMessage=Make sure your IDE is using {0}.
# HTML-formatted
JavaApplicationIntegrationProvider_ManualDynamicStep1Message=Start the Application using {0}.
# HTML-formatted
JavaApplicationIntegrationProvider_ManualDynamicStep2Message=When the application is running, click Attach to select the application process to attach to.

JavaAppletIntegrationProvider_Title=Java Applet
JavaAppletIntegrationProvider_AppletWorkDirWindowsMessage=Applet working directory depends on your web browser type. For Internet Explorer use <%USERPROFILE%>\\Desktop, for Mozilla and Firefox use the browser installation directory, for Opera use the path where the html page launching the applet is located.
JavaAppletIntegrationProvider_AppletWorkDirUnixesMessage=Applet working directory is typically the location from where the web browser running the applet was started.
# HTML-formatted
JavaAppletIntegrationProvider_OperaRemoteAttachWarningMessage=Because the Opera web browser uses bundled or standard JRE for running applets rather than the Java Plug-in and no arguments can be passed to it, it cannot be used for profiling applets remotely.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteStep3Message=Close all windows and tabs of the remote web browser.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteStep4WindowsMessage=Open the Java Control Panel from the Windows Control Panel. Open the Java tab and click View in Java Applet Runtime Settings area. The Java Runtime Settings dialog opens. Double-click the Java Runtime Parameters cell and insert following string\:<br><code>{0}</code><br>If <code>&lt;remote&gt;</code> contains spaces the entire string must be double-quoted. Close the dialog using the OK button and then click OK or Apply in the Java Control Panel.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteStep4UnixesMessage=Open the Java Control Panel of the JRE that will run profiled applet using <code>&lt;$JAVA_HOME&gt;/jre/bin/ControlPanel</code> command. Open the Java tab and click View in the Java Applet Runtime Settings area. The Java Runtime Settings dialog opens. Double-click the Java Runtime Parameters cell and insert the following string\:<br><code>{0}</code><br>Close the dialog using the OK button and then click OK or Apply in the Java Control Panel.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteStep5Message=Start the applet in the remote web browser. The browser window opens but the applet will not start until you connect the profiler.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteStopAppletMessage=The applet JVM will keep running until you stop it using the Detach Profiler action or until all windows and tabs of the remote web browser are closed.
# HTML-formatted
JavaAppletIntegrationProvider_ManualRemoteRestoreSettingsMessage=You will need to restore the original Java Runtime Parameters cell value to be able to run applets without profiling on the remote system.
# HTML-formatted
JavaAppletIntegrationProvider_OperaDirectAttachWarningMessage=Because the Opera web browser uses bundled or standard JRE for running applets rather than the Java Plug-in and no arguments can be passed to it, it cannot be used for profiling applets using direct attachment.
# HTML-formatted
JavaAppletIntegrationProvider_ManualLocalStep1Message=Close all windows and tabs of your web browser.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectStep2WindowsMessage=Open the Java Control Panel from the Windows Control Panel. Open the Java tab and click View in the Java Applet Runtime Settings area. The Java Runtime Settings dialog opens. Double-click the Java Runtime Parameters cell and insert following string\:<br><code>{0}</code><br>Close the dialog using the OK button and then click OK or Apply in the Java Control Panel.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectStep2UnixesMessage=Open the Java Control Panel of the JRE that will run the profiled applet using <code>&lt;$JAVA_HOME&gt;/jre/bin/ControlPanel</code> command. Open the Java tab and click View in the Java Applet Runtime Settings area. The Java Runtime Settings dialog opens. Double-click the Java Runtime Parameters cell and insert following string\:<br><code>{0}</code><br>Close the dialog using the OK button and then click OK or Apply in the Java Control Panel.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectStep2MacMessage=Open the Java Preferences.app located in <code>/Applications/Utilities/Java</code> directory. Open the General tab and click in the Java Applet Runtime Parameters area and insert following string\:<br><code>{0}</code><br>Click the Save button and quit the Java Preferences application.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectStep3Message=Start the applet in the web browser. The browser window opens but the applet will not start until you connect the profiler.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectStopAppletMessage=The applet JVM will keep running until you stop it using the Detach Profiler action or until all windows and tabs of the web browser are closed.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDirectRestoreSettingsMessage=You will need to restore the original Java Runtime Parameters cell value to be able to run applets without profiling.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDynamicStep2WindowsMessage=Open the Java Control Panel from the Windows Control Panel and make sure that {0} will be used to run the profiled applet.<br><br>Note\: The Opera web browser does not use Java Plug-in to run applets. Please see Opera online documentation for instructions about how to change the JRE used for running applets.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDynamicStep2UnixesMessage=Make sure that your browser has {0} set to run the profiled applet.
# HTML-formatted
JavaAppletIntegrationProvider_ManualDynamicStep3Message=Start the applet in the web browser. When the applet is running, click Attach to select the applet process to attach to.

# new keys
JavaApplicationIntegrationProvider_WorkDirMessage=Working directory is the directory from which the application will be started
NBProfiler/Categories/IO=IO
NBProfiler/Categories/IO/Files=Filer
NBProfiler/Categories/IO/Socket=Socket
NBProfiler/Categories/UI=UI
NBProfiler/Categories/UI/Java2D=Java 2D
NBProfiler/Categories/UI/Listeners=Listeners
NBProfiler/Categories/UI/Painters=Painters


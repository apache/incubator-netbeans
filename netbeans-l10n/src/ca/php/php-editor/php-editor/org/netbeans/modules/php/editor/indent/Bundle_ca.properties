# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Formating options

LBL_CodeGeneration=Generaci\u00f3 de Codi
LBL_Wrapping=Envoltori
LBL_BlankLines=L\u00ednies en blanc
LBL_Spaces=Espaiat
LBL_Imports=Importacions

LBL_bp_SAMELINE=Mateixa l\u00ednia
LBL_bp_NEWLINE=Nova l\u00ednia
LBL_bp_NEWLINE_INDENTED= Nova l\u00ednia sagnada
LBL_bp_PRESERVE=Preservar existents

LBL_bg_GENERATE=Generar
LBL_bg_LEAVE_ALONE=Deixar-ho estar
LBL_bg_ELIMINATE=Eliminar

LBL_wrp_WRAP_ALWAYS=Sempre
LBL_wrp_WRAP_IF_LONG=Si fos llarg
LBL_wrp_WRAP_NEVER=Mai

LBL_ExpandTabToSpaces=&Expandir tabuladors a espais
LBL_TabSize=Mida &tabulador:
LBL_IndentSize=M&ida sagnat:
LBL_ContinuationIndentSize=Mida &continuaci\u00f3 del sagnat:
LBL_LabelIndent=Sagnat d'etiqueta\:
LBL_AbsoluteLabelIndent=Sagnat &absolut d'etiquetes
LBL_IndentTopLevelClassMemberts=Sagnat dels membres de la classe de n&ivell-alt
LBL_AddLeadingStarInComment=Afegir distintiu d'estrella al comentari
LBL_RightMargin=Marge &dret:


LBL_BeforeKeywords=Abans de les paraules clau
#LBL_spaceBeforeWhile="while"
#LBL_spaceBeforeElse="else"
#LBL_spaceBeforeCatch="catch"
#LBL_spaceBeforeFinally="finally"

LBL_BeforeParentheses=Abans dels par\u00e8ntesis
LBL_spaceBeforeMethodDeclParen=Declaraci\u00f3 de m\u00e8tode
LBL_spaceBeforeMethodCallParen=Crida m\u00e8tode
#LBL_spaceBeforeIfParen="if"
#LBL_spaceBeforeForParen="for"
#LBL_spaceBeforeWhileParen="while"
#LBL_spaceBeforeCatchParen="catch"
#LBL_spaceBeforeSwitchParen="switch"
#LBL_spaceBeforeSynchronizedParen="synchronized"
LBL_spaceBeforeAnnotationParen=Anotaci\u00f3 de par\u00e0metres

LBL_AroundOperators=Al voltant dels operadors
LBL_spaceAroundUnaryOps=Operadors unaris
LBL_spaceAroundBinaryOps=Operadors binaris
LBL_spaceAroundTernaryOps=Operadors ternaris
LBL_spaceAroundAssignOps=Operadors d'assignaci\u00f3
LBL_br_bracesPlacement=Ubicaci\u00f3 de claus:
LBL_br_bracesGeneration=Generaci\u00f3 de claus
LBL_al_newLines=Noves l\u00ednies
LBL_al_multilineAlignment=Alineaci\u00f3 multi-l\u00ednia


#SAMPLE_Default=public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC {public int number = 1;private String text ="A";public ClassA() {}public void method(String text, int number) {} }

#SAMPLE_TabsIndents=public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC {public int number = 1;private String letters[] = new String[]{ "A", "B", "C", "D" };public int method(String text, int number) {if ( text == null ) {text = "a";}else if (text.length() == 0) {text = "empty";}else {number++;}label:switch(number) {case 1\:return method("text", 22);case 2\:return 20;default\:return -1;}} }

#SAMPLE_AlignBraces=@Anno(paramA="a Value", paramB="bValue")public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC {public int number = 1;private String letters[] = new String[]{ "A", "B", "C", "D" };public ClassA() {}public int method(String text, int number, Object object) throws ExceptionA, ExceptionB {assert nuber + text.length() < 20 : "message";if ( text == null ) {text = "a";}else if (text.length() == 0) {text = number == 2 ? "empty" : "nonempty";number = ((op3() + 2) * op4);}else {number++;}for( int i = 1; i < 100; i++ ) {}while ( this.number < 2 && number != 3 ) {method( "Some text", 12, new Object());}do {try {op1().op2.op3().op4();}catch ( Throwable t ) {log();}finally {close();}} while ( this.number < 2 && number != 3 );}public enum Where {NORTH, EAST, SOUTH, WEST;}}

#SAMPLE_Wrapping=@Anno(paramA="a Value", paramB="bValue")@Deprecated public class ClassA extends Object implements InterfaceA, InterfaceB, InterfaceC {private static final String letters[] = new String[]{ "A", "B", "C", "D" };public int number = 1;public ClassA() {}public int method(String text, int number, Object object) throws ExceptionA, ExceptionB {assert nuber + text.length() < 20 : "message";if (number==13 && object instanceof Runnable )method( "Some text", 12, new Object());for( int i = 1; i < 100; i++ )System.out.println(i);while ( this.number < 2 && number != 3 )this.number++;do method1().method2().method3();while ( this.number < 2 && number != 3 );return number > 100 ? -1 : -2;}public enum Where {NORTH, EAST, SOUTH, WEST;}}


#SAMPLE_BlankLines=package org.netbeans.samples;import java.util.List;import java.util.Map;public class ClassA {public int i;public int j;public ClassA() {}public void methodA() {}public void methodB() {}public class innerClass {}public static interface innerInterface {}}

#SAMPLE_Spaces=@Anno(paramA="a Value", paramB="bValue")public class ClassA {public int number = 1;private String text ="A";static float[] floats = new float[3];protected double[] doubles = new double[]{3.67,40,2e-30};static {floats[0]=12.6f;}public ClassA() {}public int method(String text, int number) {if (number==13) {return (int)System.currentTimeMillis();}else {{}}for( int i = 20; i < 100; i++) {synchronized(this) {while(i%13>5)method( text + " ", number++);}}for(float f : floats)System.out.println(f);switch(number) {case 1\:do { out( (2+3)*this.number--); } while(this.number > 6);return 10;case 2\:try {toString();}catch ( IllegalStateException illegalStateException ) {illegalStateException.printStackTrace();}finally {return 20;}default\:return number > 100 ? -1 : -2;}} }



nlFinallyCheckBox1.text="finall&y"


AN_Preview=Vista pr\u00e8via
AD_Preview=Vista pr\u00e8via
LBL_bp_ClassDecl=
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleDescription=Camp de continuaci\u00f3 del sagnat
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleName=N\u00famero de continuaci\u00f3 del sagnat
FmtTabsIndents.initialIndentSizeField.AccessibleContext.accessibleDescription=Camp de mida de continuaci\u00f3 del sagnat inicial


# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# RakeRunnerAction
#RakeRunnerAction.RunDebugRakeTask=Run/Debug Rake Task...
#RakeRunnerAction.Rake=Rake

# RakeTaskChooser
GrailsCommandChooser.accessibleDescription=Grails \u547d\u4ee4\u9009\u62e9\u5668
GrailsCommandChooser.accessibleName=Grails \u547d\u4ee4\u9009\u62e9\u5668
GrailsCommandChooser.debugCheckbox.text=\u8c03\u8bd5(&D)
GrailsCommandChooser.matchingTaskLabel.text=\u5339\u914d\u4efb\u52a1(&M):
GrailsCommandChooser.no.matching.task=<\u6ca1\u6709\u4e0e\u5f53\u524d\u8fc7\u6ee4\u5668\u5339\u914d\u7684\u547d\u4ee4>

GrailsCommandChooser.rakeTaskHint.text=(\u547d\u4ee4\u540d\u79f0\u7684\u4e00\u90e8\u5206, \u901a\u914d\u7b26: "?", "*")
GrailsCommandChooser.rakeTaskLabel.text=\u8fc7\u6ee4\u5668(&F):
GrailsCommandChooser.refreshButton.accessibleDescription=\u5237\u65b0 Grails \u547d\u4ee4
GrailsCommandChooser.refreshButton=\u5237\u65b0\u547d\u4ee4(&R)
GrailsCommandChooser.reloading.tasks=\u6b63\u5728\u91cd\u65b0\u52a0\u8f7d Grails \u547d\u4ee4...
GrailsCommandChooser.runButton.accessibleDescription=\u8fd0\u884c\u9009\u5b9a\u7684 Grails \u547d\u4ee4
GrailsCommandChooser.runButton=\u8fd0\u884c
GrailsCommandChooser.taskParamLabel.text=\u53c2\u6570(&P):
GrailsCommandChooser.title=\u8fd0\u884c Grails \u547d\u4ee4 ({0})
#Run/Debug Grails Command ({0})

# RakeSupport
#RakeSupport.RerunRakeWithTrace=Click here to rerun the task with tracing enabled
#RakeSupport.rake.task.fetching.fails=Rake tasks fetching failed with (working directory: {0}):\n\n{1}

# RakeRunner
#RakeRunner.task.does.not.exist="{0}" task does not exist.

# RakeRunnerAction
#RakeRunnerAction.no.platform.for.project=There is not a Ruby platform selected for the "{0}" project.




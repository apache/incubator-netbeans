#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
DN_org.netbeans.modules.java.hints.perf.ManualArrayCopy=Manual array copy
DESC_org.netbeans.modules.java.hints.perf.ManualArrayCopy=Finds occurrences of manual array copying via for loop
ERR_manual-array-copy-coll=Manual array copy to Collection
FIX_manual-array-copy-coll=Replace with Collection.addAll(Arrays.asList(...))
ERR_manual-array-copy=Manual array copy
FIX_manual-array-copy=Substitu\u00edr con System.arraycopy

DN_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Usage of .size() == 0
DESC_org.netbeans.modules.java.hints.perf.SizeEqualsZero=Use .isEmpty() or !.isEmpty() no lugar de .size() == 0 ou .size() != 0 onde sexa pos\u00edbel.
ERR_SizeEqualsZero=Usage of .size() == 0 can be replaced with .isEmpty()
ERR_SizeEqualsZeroNeg=Usage of .size() != 0 can be replaced with !.isEmpty()
FIX_UseIsEmpty=Usar .isEmpty() no lugar de .size() == 0
FIX_UseIsEmptyNeg=Usar .isEmpty() no lugar de .size() != 0
CONF_LBL_SizeEqualsZero=Also check for .size() != 0
CONF_TP_SizeEqualsZero=Should this hint also report occurrences of ".size() != 0"?

DN_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=String constructor
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringConstructor=Use of java.lang.String constructor is usually useless.
ERR_StringConstructor=String constructor invocation
FIX_StringConstructor=Remove String constructor invocation
CONF_LBL_SizeEqualsZero=Ignore String constructors containing invocations of String.substring
CONF_TP_SizeEqualsZero=Ignore String constructors containing invocations of java.lang.String.substring

DN_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=String.equals("")
DESC_org.netbeans.modules.java.hints.perf.Tiny.stringEqualsEmpty=Use of String.equals("") can be replaced with with String.length() == 0 (for JDK5 and lower) or String.isEmpty() (for JDK6 and higher)
ERR_StringEqualsEmpty=String equals empty string
FIX_StringEqualsEmpty=Change to String.length() == 0
FIX_StringEqualsEmptyNeg=Change to String.length() != 0
FIX_StringEqualsEmpty16=Change to String.isEmpty()

DN_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Useless use of StringBuffer
DESC_org.netbeans.modules.java.hints.perf.StringBuffer2Builder=Usar StringBuilder no lugar de StringBuffer onde sexa pos\u00edbel.
ERR_StringBuffer2Builder=StringBuffer can be replaced with StringBuilder
FIX_StringBuffer2Builder=Substitu\u00edr con StringBuilder

DN_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=Length one String in String.indexOf
DESC_org.netbeans.modules.java.hints.perf.Tiny.lengthOneStringIndexOf=Length one String literal in String.indexOf can be replaced with a character literal
#the string:
ERR_LengthOneStringIndexOf=Length one string {0} in String.indexOf
FIX_LengthOneStringIndexOf=Substitu\u00edr cun car\u00e1cter literal

DN_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=.getClass() replaceable with .class
DESC_org.netbeans.modules.java.hints.perf.Tiny.getClassInsteadOfDotClass=Finds instantions of a class directly followed by invocation of .getClass() on the newly constructed object
ERR_GetClassInsteadOfDotClass=Invocation of .getClass() can be replaced with .class
FIX_GetClassInsteadOfDotClass=Replace invocation of .getClass() with .class

DN_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=String.intern() called on constant
DESC_org.netbeans.modules.java.hints.perf.Tiny.constantIntern=Invocations of String.intern() on compile-time constants are superfluous.
ERR_ConstantIntern=Invoking String.intern() of a compile-time constant is superfluos
FIX_ConstantIntern=Remove invocation of String.intern()

DN_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=Creating new Boolean
DESC_org.netbeans.modules.java.hints.perf.NoBooleanConstructor=Creating new Boolean is inefficient and typically useless.
ERR_NoBooleanConstructor=Creating new Boolean is inefficient
FIX_NoBooleanConstructorBoolean=Remove Boolean constructor invocation
FIX_NoBooleanConstructorString=Remove Boolean constructor invocation

DN_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Collections without initial capacity
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.collections=Looks for instatiations of collections with missing initial capacity. Only collections backed-up with an array are tested.
ERR_InitialCapacity_collections=Instantianting collection without specified initial capacity

DN_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=StringBuilder without initial capacity
DESC_org.netbeans.modules.java.hints.perf.InitialCapacity.stringBuilder=Looks for instantiations of StringBuilder or StringBuffer with missing initial capacity.
ERR_InitialCapacity_stringBuilder=Instantianting StringBuilder or StringBuffer without specified capacity

DN_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Set replaceable with EnumSet
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumSet=Finds instantiations of Sets that can be replaced with EnumSet
DN_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Map replaceable with EnumMap
DESC_org.netbeans.modules.java.hints.perf.Tiny.enumMap=Finds instantiations of Maps that can be replaced with EnumMap
ERR_Tiny_enumSet=Set can be replaced with java.util.EnumSet
ERR_Tiny_enumMap=Map can be replaced with java.util.EnumMap
FIX_Tiny_enumMap=Replace Map with java.util.EnumMap


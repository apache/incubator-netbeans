/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.netbeans.modules.project.ant.ui;

import java.util.prefs.Preferences;
import org.netbeans.api.project.FileOwnerQuery;
import org.netbeans.api.project.Project;
import org.netbeans.api.project.ProjectManager;
import org.netbeans.api.project.ProjectUtils;
import org.netbeans.modules.project.ant.ShowModifiedBuildImplXMLWarning;
import org.netbeans.spi.project.support.ant.GeneratedFilesHelper;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.NbBundle;
import org.openide.util.lookup.ServiceProvider;

/**
 *
 * @author lahvac
 */
@NbBundle.Messages({
    "TITLE_ModificationsDetected=Modification detected in build-impl.xml",
    "# {0} - build-impl.xml file path",
    "MSG_ModificationsDetected=Custom modifications detected in \"{0}\", which is supposed to be autogenerated. " +
                              "These modifications may be dangerous. If these modifications are intentional, " +
                              "please move them into build.xml. Delete build-impl.xml and restart the IDE," +
                              "the file will be regenerated.",
    "BTN_DoNoShowAgain=Do not show again for this project",
    "BTN_OK=OK"
})
@ServiceProvider(service=ShowModifiedBuildImplXMLWarning.class)
public class ShowModifiedBuildImplXMLWarningImpl implements ShowModifiedBuildImplXMLWarning {

    @Override
    public void showModifiedBuildImplXMLWarning(FileObject dir, String path) {
        ProjectManager.mutex().postReadRequest(() -> {
            String KEY_SHOW_BUILD_IMPL_XML_MODIFICATION_WARNING = "build.impl.xml.modification.warning";
            Project prj = FileOwnerQuery.getOwner(dir);
            if (prj != null) {
                Preferences prefs = ProjectUtils.getPreferences(prj, GeneratedFilesHelper.class, false);
                if (prefs.getBoolean(KEY_SHOW_BUILD_IMPL_XML_MODIFICATION_WARNING, true)) {
                    String msg = Bundle.MSG_ModificationsDetected(FileUtil.toFile(dir.getFileObject("nbproject/build-impl.xml")).getAbsolutePath());
                    NotifyDescriptor nd = new NotifyDescriptor.Message(msg, NotifyDescriptor.ERROR_MESSAGE);
                    nd.setTitle(Bundle.TITLE_ModificationsDetected());
                    nd.setMessageType(NotifyDescriptor.ERROR_MESSAGE);
                    String ok = Bundle.BTN_OK();
                    String doNotShowAgain = Bundle.BTN_DoNoShowAgain();
                    nd.setOptions(new Object[] {ok, doNotShowAgain});
                    nd.addPropertyChangeListener(evt -> {
                        if (doNotShowAgain.equals(evt.getNewValue())) {
                            prefs.putBoolean(KEY_SHOW_BUILD_IMPL_XML_MODIFICATION_WARNING, false);
                        }
                    });
                    DialogDisplayer.getDefault().notifyLater(nd);
                }
            }
        });
    }
    
}

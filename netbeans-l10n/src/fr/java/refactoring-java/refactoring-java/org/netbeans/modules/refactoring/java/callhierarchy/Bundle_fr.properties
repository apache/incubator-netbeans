# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

CTL_CallHierarchyAction=Call Hierarchy
CTL_CallHierarchyTopComponent=Java Call Hierarchy
HINT_CallHierarchyTopComponent=This is a Java Call Hierarchy window
CallHierarchyTopComponent.jMenuItemFilterAll.text=Projets ouverts
CallHierarchyTopComponent.jMenuItemCurrProject.text=Current Project
CallHierarchyTopComponent.jMenuItemUnitTests.text=Search unit tests
CallHierarchyTopComponent.jBtnRefresh.toolTipText=Rafra\u00eechir
CallHierarchyTopComponent.jBtnCancel.toolTipText=Stop searching
CallHierarchyTopComponent.jTogBtnCaller.toolTipText=Show hierarchy of callers
CallHierarchyTopComponent.jTogBtnCallee.toolTipText=Show hierarchy of callees
CallHierarchyTopComponent.jTogBtnScope.toolTipText=Scope to search

CallNode.PleaseWait.displayName=Veuillez patienter...
CallNode.Default.displayName=Select some method to explore.
CallNode.Canceled.displayName=Searching canceled.
CallNode.Broken.displayName=The element being explored is not available. Il a \u00e9t\u00e9 d\u00e9truit ou significativement modifi\u00e9. Les utilisations ne peuvent pas \u00eatre retrouv\u00e9es.

GoToSourceAction.displayName=Aller \u00e0 la source
Call.open.warning=File ''{0}'' cannot be found.
# call display name
# {0} - foo() - method name
# {1} - foo.Foo - FQN of enclosing class
# {2} - number of occurrences; included only if number > 1
Call.htmlHeader=<html>{0} :: {1}{2,choice,1#|1<, {2} occurrences}</html>
Call.staticInitializerHtmlHeader=&lt;init&gt;



# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

DESC_CanBeFinal=Localiza campos que podem se tornar finais, o que pode simplificar a sincroniza\u00e7\u00e3o e clareza
DN_CanBeFinal=O Campo Pode ser Final
DN_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Chamando Condition.notify()
DESC_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=A chamada a notify ou notifyAll em java.util.concurrent.locks.Condition deve provavelmente ser substitu\u00edda pela chamada signal ou signalAll.
# {0} - the name of the field
ERR_CanBeFinal=O campo {0} pode ser final
#{0}: method name:
ERR_NotifyOnCondition=Chamando {0} em java.util.concurrent.locks.Condition
ERR_UnlockOutsideTryFinally=Lock.lock() n\u00e3o desbloqueado em finally
# {0} - the name of the field to be made final
FIX_CanBeFinal=Tornar {0} final
FIX_MoveUnlockToFinally=Mover unlock() para finally
FIX_NotifyOnConditionFix=Substituir pela chamada de {0}

DN_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Chamando Condition.wait()
DESC_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=\u00c9 prov\u00e1vel que a chamada para aguardar java.util.concurrent.locks.Condition n\u00e3o tenha sido intencional.
ERR_WaitOnCondition=Chamando wait em java.util.concurrent.locks.Condition.

DN_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Chamando Thread.run()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadRun=A chamada \u00e0 execu\u00e7\u00e3o de java.lang.Thread deve ser provavelmente substitu\u00edda pela chamada do m\u00e9todo start()
ERR_ThreadRun=Chamando run() em java.lang.Thread
FIX_RemoveRedundantUnlock=Remover chamada extra unlock()
FIX_ThreadRun=Substituir por Thread.start()

DN_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Iniciando Thread no construtor
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=O in\u00edcio de um novo Thread no construtor \u00e9 perigoso e deve ser evitado.
ERR_ThreadStartInConstructor=Iniciando novo Thread no construtor

DN_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Chamando Thread.yield()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadYield=A chamada do m\u00e9todo yield() em java.lang.Thread \u00e9 geralmente usada para disfar\u00e7ar os problemas de sincroniza\u00e7\u00e3o e deve ser evitada.
ERR_ThreadYield=Chamando yield() em java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Chamando Thread.stop()/suspend()/resume()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Os m\u00e9todos stop(), suspend() e resume() de java.lang.Thread s\u00e3o perigosos e n\u00e3o devem ser usados.
#{0}: method name (stop, suspend, resume):
ERR_ThreadSuspend=Chamando {0} em java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Blocos sincronizados aninhados
DESC_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=O aninhamento de blocos sincronizados \u00e9 in\u00fatil (se eles usarem o mesmo objeto de bloqueio) e perigoso.
ERR_NestedSynchronized=Blocos sincronizados aninhados

DN_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Bloco sincronizado vazio
DESC_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Os blocos sincronizados vazios s\u00e3o geralmente in\u00fateis
ERR_EmptySynchronized=Bloco sincronizado vazio

DN_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Sincronizando em Lock
DESC_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=A sincroniza\u00e7\u00e3o em java.util.concurrent.locks.Lock \u00e9 geralmente n\u00e3o intencional e deve ser substitu\u00edda por Lock.lock()-Lock.unlock()
ERR_SynchronizedOnLock=Sincronizando em java.util.concurrent.locks.Lock
FIX_SynchronizedOnLock=Substituir por Lock.lock()-Lock.unlock()

DN_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Campo de array vol\u00e1til
DESC_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Localiza declara\u00e7\u00f5es de campos de arrays vol\u00e1teis.
ERR_VolatileArrayField=Campo de array vol\u00e1til

DN_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Lock n\u00e3o desbloqueado em finally
DESC_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Localiza ocorr\u00eancias de Lock.lock()-Lock.unlock() n\u00e3o encapsulado apropriadamente em try-finally.

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait chamado fora de um contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait chamado fora de um contexto sincronizado
ERR_UnsyncedWait=Chamando Object.wait fora de um contexto sincronizado

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify chamado fora de um contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify chamado fora de um contexto sincronizado
ERR_UnsyncedNotify=Chamando Object.notify fora de um contexto sincronizado

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Thread.sleep em contexto sincronizado
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=A chamada a Thread.sleep em contexto sincronizado pode causar problemas de desempenho
ERR_SleepInSync=Thread.sleep chamado em contexto sincronizado

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Thread.sleep em loop
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=A chamada a Thread.sleep em loop pode causar problemas de desempenho
ERR_SleepInLoop=Thread.sleep chamado em loop


FIX_UnlockOutsideTryFinally=Encapsular por try-finally
MSG_ExtraUnlock=Chamada extra unlock(); o bloqueio j\u00e1 foi liberado em finally

